apiVersion: v1
kind: Secret
metadata:
  name: sekisho-oauth
  namespace: default
type: Opaque
data:
  # Base64 encoded values - replace with actual values
  # echo -n "your-oauth-client-id" | base64
  OAUTH_CLIENT_ID: ""
  # echo -n "your-oauth-client-secret" | base64
  OAUTH_CLIENT_SECRET: ""

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sekisho-config
  namespace: default
data:
  config.yaml: |
    server:
      listen_addr: ":8080"
      read_timeout: "30s"
      write_timeout: "30s"
      shutdown_timeout: "10s"

    auth:
      provider: "google"
      client_id: "${OAUTH_CLIENT_ID}"
      client_secret: "${OAUTH_CLIENT_SECRET}"
      redirect_url: "https://auth.yourdomain.com/callback"
      session_duration: "24h"
      cookie_domain: ".yourdomain.com"
      cookie_secure: true

    upstream:
      - host: "app.yourdomain.com"
        target: "http://app-service:8080"
        timeout: "30s"
      - host: "api.yourdomain.com"
        target: "http://api-service:3000"
        timeout: "10s"

    policy:
      default_action: "deny"
      cache_size: 10000
      rules:
        - name: "health_check"
          path: "/health"
          methods: ["GET"]
          action: "allow"
        - name: "authenticated_access"
          path: "/*"
          methods: ["GET", "POST", "PUT", "DELETE"]
          require_auth: true
          action: "allow"

    rate_limiting:
      requests_per_second: 100.0
      burst_size: 200
      auth_requests_per_minute: 10
      cleanup_interval: "5m"

    audit:
      enabled: true
      log_path: "/dev/stdout"
      include_request_body: false
      include_response_body: false

    metrics:
      enabled: true
      path: "/metrics"
      namespace: "sekisho"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sekisho
  namespace: default
  labels:
    app: sekisho
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sekisho
  template:
    metadata:
      labels:
        app: sekisho
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: sekisho
        image: sekisho:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: OAUTH_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: sekisho-oauth
              key: OAUTH_CLIENT_ID
        - name: OAUTH_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: sekisho-oauth
              key: OAUTH_CLIENT_SECRET
        volumeMounts:
        - name: config
          mountPath: /app/configs
          readOnly: true
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: config
        configMap:
          name: sekisho-config

---
apiVersion: v1
kind: Service
metadata:
  name: sekisho
  namespace: default
  labels:
    app: sekisho
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  selector:
    app: sekisho